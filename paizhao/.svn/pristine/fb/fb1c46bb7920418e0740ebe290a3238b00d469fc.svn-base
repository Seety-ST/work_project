/**
 * @author hudw
   2015.4
   fis pure config 设置
**/

var pk = require('./package.json');

var static_url = '/static/wap';
var tpl_url = '/templates/wap';

// 配置开发模式
var file = fis.file.wrap('public_tag.txt');

if(!file)
{
	fis.util.write('./public_tag.txt','is_dev');
}

// ======= 补充iconf的assign函数，必须加上 ======
var _ = fis.util;
_.assign = function(temp_obj,source,target)
{
	return _.merge(source,target);
}
// ======= 补充iconf的assign函数，必须加上 ======

var sass_source_map = pk.author != 'hudw' || pk.author != 'hgc';

var mode = file.getContent();

// ================== 访问页面的domain配置 ==================
var domain  = '';
var domain_info = 
{
	"predev" : "http://51snap.yueus.com/",
	"pub" : "http://51snap.yueus.com/", 
	"hudw":
	{
		"dev" : "http://localhost/yueyue_huipai/loc"
	},
	"zky" : 
	{ 
		"dev" : "http://localhost/paizhao/loc"
	},
	"hgc" : 
	{ 
		"dev" : ""
	},
	"hst" : 
	{ 
	    "dev" : "http://localhost/paizhao/loc"
	} 
};
// ================== 访问页面的domain配置 ==================

// ================== 生成路径的deploy配置 ==================
var deploy_info = 
{
	online : {
		to : '../..'
	},
	dev : {
		to : '../..'
	},
	loc : {
		to : '../../loc'
	}
};
// ================== 生成路径的deploy配置 ==================


switch(mode.trim())
{
	case 'is_dev':
		domain = domain_info[pk['author']].dev;
		break;
	case 'is_predev':
		domain = domain_info.predev;
		break;
	case 'is_pub':
		domain = domain_info.pub;
		break;
	case 'is_pub_test':
		domain = domain_info.pub_test_domain;
		break;
	default:
		domain = domain_info.predev;
}

// 命名空间
fis.config.set('namespace','wap-huipai');

//设置jshint插件要排除检查的文件，默认不检查lib、jquery、backbone、underscore等文件
//使用pure release命令时，添加--lint或-l参数即可生效
fis.config.set('settings.lint.jshint.ignored', [ 'lib/**', /jquery|backbone|underscore/i ]);

//设置项目编码格式
fis.config.set('project.charset', 'utf8');

//设置合并格式
fis.config.set('modules.spriter', 'csssprites');

/***** SASS配置 START *****/

//项目排除掉 指定文件_xxx.scss，不对其进行构建
fis.config.set('project.exclude', ['**/_*.scss','/**.cmd','tpl/**.tpl.html']);
//scss后缀的文件，用fis-parser-sass插件编译
fis.config.set('modules.parser.scss', 'sass');
//scss文件产出为css文件
fis.config.set('roadmap.ext.scss', 'css');
fis.config.set('settings.parser.sass', 
{
    sourceMap:false,
    // 加入文件查找目录
    include_paths: []
});

/***** SASS配置 END *****/

fis.config.set('project.md5Connector','.');

/***** fis 核心配置 参数 *****/
// 因为fis架构的原因，本来合并图片的功能要重新设置，所以用unshift 插入新的设置，确保覆盖了默认的设置
fis.config.get('roadmap.path').unshift({
    reg: '**.scss',
    //配置useSprite表示reg匹配到的css需要进行图片合并
    useSprite: true,
	release : static_url+'/$&'
});

fis.config.get('roadmap.path').unshift({
    reg: '**.png',
    release: static_url+'/$&'
});

fis.config.get('roadmap.path').unshift({
    reg: '**.json',
    release: false
});
fis.config.get('roadmap.path').unshift({
    reg: '**.txt',
    release: false
});
fis.config.get('roadmap.path').unshift({
    reg: '**.sh',
    release: false
});
fis.config.get('roadmap.path').unshift({
    reg: 'components/**.js',
    isMod:true,
	release:static_url+'/$&'
});
fis.config.get('roadmap.path').unshift({
    reg: /\/templates\/(.*)/i,
	release:tpl_url+'/$1',
	isHtmlLike : true
});

fis.config.get('roadmap.path').unshift({
    reg: 'templates/**.tmpl',
	release:false,
	isJsLike : true
});

fis.config.get('roadmap.path').unshift({
    reg: 'lib/**.js',		
	release:false
});
fis.config.get('roadmap.path').unshift({
    reg: /\/lib\/base.js/i,	
	useMap:false,
	isMod : false,
	release:static_url+'/$&'
});
fis.config.get('roadmap.path').unshift({
    reg: /\/style\/common\/(yue-ui-*.*)|(reset.*)/i,	
	release:false
});
fis.config.get('roadmap.path').unshift({
    reg: 'image/common/svgs/**.svg',	
	release:false
});

// 进行config配置
fis.config.merge({
	statics : static_url,
	modules : {
        parser : {
            //.tmpl后缀的文件使用fis-parser-handlebars插件编译
            tmpl : 'handlebars',            
        },
        // postpackager: ['iconfont','autoload']
    },
    settings : {
        parser : {
            handlebars : {
                useData: true
            }
        },
        postpackager: 
        {
            // iconfont: 
            // {
            //    //可选，遍历js时，可以忽略的基础库
            //    ignore: [ 'badjs', 'mod', 'bj-report', 'tools', 'db.js'],
            //    //可选，匹配的icon前缀，即类名是i-xxx, optional, 默认是 i-
            //    classPrefix: 'i-',
            //    //cssInline: true,
            //    pseClass: 'before',	
            //    svgPath: 'image/ui/svgs',
            //    output: 'style/fonts',
            //    pagePath : '/templates',
            //    checkAll : false,
            // },
            autoload :
            {
            	useSiteMap:true,// useSiteMap设置使用整站/页面异步资源表配置，默认为false
            	useInlineMap:true,// useInlineMap设置内联resourceMap还是异步加载resourceMap，默认为false
            	beautyResourceMap:true,// 美化resourceMap，即使开启压缩，也不会压缩resourceMap
            }
        }
    },
    roadmap : 
	{
		//静态资源域名，使用pure release命令时，添加--domains或-D参数即可生效
        domain : domain,
		//fis允许在前端开发中使用sass 等非标准语言，可以设置这类语言文件作为引用文件，并且作为对应产出文件
		ext : 
		{
			'scss' : 'css'
		}
    },
	deploy : deploy_info,
	path : [
            {
                //所有的style目录下面的css文件
                reg : '/style/**.css',
                //发布到/static/css/xxx目录下
                release : static_url+'/style$&',
				//使用域名控制
				useDomain : true,				
				useSprite: true
            },
			{
                //cmd文件不编译
                reg : '**.cmd',
                //编译的时候不要产出了
                release : false
            },		
			{
                //sh文件不编译
                reg : '**.sh',
                //编译的时候不要产出了
                release : false
            },
			{
                //tpl目录文件不编译
                reg : '/tpl/$',
                //编译的时候不要产出了
                release : false
            },				
			{
				reg: '**.handlebars',
				isJsLike: true,
				release : false
			},
			{
				reg : '**.tmpl',
				release : true,
				useDomain : true
			}
    ]
});




//csssprite处理时图片之间的边距，默认是3px 注意！！ 使用图片合并只有执行合并命令才生效
fis.config.set('settings.spriter.csssprites.margin', 10);
// 设置了scale ，每一条css里面就不用设置background-size
fis.config.set('settings.spriter.csssprites.scale', 1);


var run_status_tag = "<!--RUN_STATUS-->";
var complie_date = "<!--COMPLIE_DATE-->";
var nowDate = new Date();
var now = nowDate.getFullYear() + "-"+ (nowDate.getMonth()+1) + "-" + nowDate.getDate() + " " + nowDate.getHours() + ":" + nowDate.getMinutes() + ":" + nowDate.getSeconds();
fis.config.set('modules.prepackager',function(ret,content,conf,settings)
{	
	fis.util.map(ret.src, function(subpath, file)
	{
        if (file.isHtmlLike) {
            var content = file.getContent();
            //content += '<!-- build '+ (new Date())+'-->';

            if (content.indexOf("<!--RUN_STATUS-->") !== -1) 
            {
            	var run_status = 'DEV';
            	if(mode.trim() == 'is_pub')
            	{
            		run_status = 'ONLINE';
            	}
	            content = content.replace(run_status_tag, run_status);
	        }	        
	        if(content.indexOf(complie_date) !== -1) 
	        {
	        	content = content.replace(complie_date, now);	
	        }

            file.setContent(content);
        }        

    });
});
       
if(mode.trim() =='is_pub' || mode.trim() =='is_pub_test' || mode.trim() == 'is_pub_poco')
{
	fis.config.set('pack', 
	{
		'js/common.js' : 
		[			
			'/modules/global/**.js',
			// ===== list 组件 ====
			'/modules/global/list/**.js',							
			// ===== widget SATRT =====
			//'/modules/global/widget/**.js',
			// '/modules/global/widget/add_reduction/**.js',
			// '/modules/global/widget/footer/**.js',
			// '/modules/global/widget/header/**.js',
			// '/modules/global/widget/location/**.js',

		],
		'style/common.css' : 
		[				
			'/style/main.scss',
            '/modules/global/list/list.scss'
		],
	});
}


//设置为ture则为全部合并
//fis.config.set('settings.postpackager.simple.autoCombine', false);