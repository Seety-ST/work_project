Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  var buffer = "", stack1, functionType="function", escapeExpression=this.escapeExpression, self=this;

function program1(depth0,data) {
  
  var buffer = "", stack1, helper;
  buffer += "\n		<a href=\"";
  if (helper = helpers.link_url) { stack1 = helper.call(depth0, {hash:{},data:data}); }
  else { helper = (depth0 && depth0.link_url); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }
  buffer += escapeExpression(stack1)
    + "\">\n			<li class=\"pic-list-width-285\">\n				<div class=\"img-item\">\n					<div class=\"img\">\n						<img src=\"";
  if (helper = helpers.images) { stack1 = helper.call(depth0, {hash:{},data:data}); }
  else { helper = (depth0 && depth0.images); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }
  buffer += escapeExpression(stack1)
    + "\">\n					</div>\n					<div class=\"txt color-fff\">999+人咨询</div>\n				</div>\n				<div class=\"txt-item\">\n					<div class=\"box-1 clearfix\">\n						<p class=\"txt-1 color-fe9 fldi f18 fb\">\n							";
  if (helper = helpers.prices) { stack1 = helper.call(depth0, {hash:{},data:data}); }
  else { helper = (depth0 && depth0.prices); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }
  buffer += escapeExpression(stack1)
    + "\n						</p>\n						<p class=\"txt-2  color-999 frdi f14\">12人咨询</p>\n					</div>\n					<div class=\"box-2\">\n						<p class=\"txt-1 color-333 f14\">\n							";
  if (helper = helpers.titles) { stack1 = helper.call(depth0, {hash:{},data:data}); }
  else { helper = (depth0 && depth0.titles); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }
  buffer += escapeExpression(stack1)
    + "\n						</p>\n					</div>\n					\n				</div>\n			</li>\n		</a>\n		";
  return buffer;
  }

  buffer += "<div class=\"pic-list-mod-1 pic-list-mod-w1200 font_wryh\">\n	<ul class=\"list clearfix\">\n		";
  stack1 = helpers.each.call(depth0, (depth0 && depth0.result_data), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\n	</ul>\n</div>";
  return buffer;
  })