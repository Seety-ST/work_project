<template lang="html">
    <section class="photos-page" >
        <div class="top-bar pl15 pr15" v-show="show_tips">
            <span>{{description}}</span>
            <i class="delete" @click="show_tips = false" ></i>
        </div>

        <div class="list-wrapper" v-show="!preview">
            <ul class="container clearfix">
                <template v-for="(item,index) in list">
                    <li class="item"  :style="item.style">
                        <div class="child">
                            <img v-lazy.container="change_img_resize(item.url)" >
                            <div class="extend" @click="select_item(index)">
                                <div class="fade-mix" v-show="show_fade(item)" ></div>
                                <span class="circle" v-show="show_select(item)" >
                                    <em >{{item.num}}</em>
                                </span>
                                <div class="none" v-show="show_circle(item)" >
                                    <div class="big"></div>
                                    <div class="mid"></div>
                                </div>
                            </div>
                        </div>
                    </li>
                </template>
            </ul>
        </div>

        <div class="preview" v-show="preview">
            <!-- 如果你后续需要找到当前实例化后的swiper对象以对其进行一些操作的话，可以自定义配置一个ref属性 -->
            <swiper :options="swiperOption" ref="mySwiperA" class="swiper-box">
                <!-- 幻灯内容 -->
                <swiper-slide v-for="item in list"><img v-bind:src="change_img_resize(item.url,'640')" alt="" class="w-100"></swiper-slide>
            </swiper>
        </div>

        <div class="ui-button-submit-m f16 ui-border-t main-bg footer-bar" v-show="mode == 'view'">
            <div class="lbox type-full">
                <button type="button" name="button" class="ui-button  ui-button-block ui-button-100per " @click="zzhb">
                    <i class="icon-zzhb"></i>
                    <span>制作海报</span>
                </button>
            </div>
            <div class="line">

            </div>
            <div class="rbox type-full">
                <button type="button" name="button" class="ui-button  ui-button-block ui-button-100per " @click="wysq"><i class="icon-wysq"></i><span>我要上墙</span>
                </button>
            </div>
        </div>

        <div class="ui-button-submit-m f16 ui-border-t main-bg footer-bar" v-show="mode == 'wysq'">
            <div class="lbox type-full cancel">
                <button type="button" name="button" class="ui-button  ui-button-block ui-button-100per " @click="qx">取消</button>
            </div>
            <div class="rbox type-full">
                <button type="button" name="button" class="ui-button  ui-button-block ui-button-100per " @click="wysq"><i class="icon-wysq"></i><span>我要上墙</span>
                </button>
            </div>
        </div>

        <div class="ui-button-submit-m f16 ui-border-t main-bg footer-bar" v-show="mode == 'zzhb'">
            <div class="lbox type-full cancel">
                <button type="button" name="button" class="ui-button  ui-button-block ui-button-100per " @click="qx">取消</button>
            </div>
            <div class="rbox type-full">
                <button type="button" name="button" class="ui-button  ui-button-block ui-button-100per " @click="zzhb">
                    <i class="icon-zzhb"></i>
                    <span>制作海报</span>
                </button>
            </div>
        </div>
    </section>
</template>

<script type="text/babel">

var Util = require.syncLoad(__moduleId('/modules/global/util/index'));
var Lazyload = require.syncLoad(__moduleId('/modules/widget/lazyload/index'));
// 加载轮播图模块
var Swipe = require('/modules/widget/swipe/index');

// 使用轮播图
Vue.use(Swipe);

/**
 * 判断元素是否存在
 * @param  {[type]} needle   [description]
 * @param  {[type]} haystack [description]
 * @return {[type]}          [description]
 */
function in_array(needle, haystack)
{
    var length = haystack.length;
    var gettype = Object.prototype.toString;
    for(var i = 0; i < length; i++)
    {
        if(haystack[i] == needle)
        {
            return true;
        }
    }
    return false;
}

/**
 * 删除数组指定元素
 * @param  {[type]} val [description]
 * @return {[type]}     [description]
 */
Array.prototype.removeByValue = function(val)
{
    for(var i=0; i<this.length; i++)
    {
        if(this[i] == val)
        {
            this.splice(i, 1);
            break;
        }
    }
}

exports.init = function(params)
{
    return {
        el: '#photos-page',
        data:
        {
            mode : 'view',
            count : 1,
            preview : false,
            preview_img : '',
            zzhb_list : [],
            wysq_list : [],
            selected_list :[],
            title : '我的照片',
            show_tips : true,
            order_sn : params.order_sn,
            description : '',
            list : []
        },
        mounted : function()
        {
            var self = this;

            self.reset();

            self.get_list();

            // 配置使用lazyload
    		Vue.use(Lazyload);

            window.onresize = function()
            {
                self.init_height();
            }

            window.onhashchange = function()
            {
                var hash = window.location.hash.substr(1);
                switch (hash)
                {
                    case '':
                        self.reset();
                        self.preview = false;
                        break;
                    default:
                }
            }
        },
        methods :
        {
            init_height : function()
            {
                var self = this;
                var width = window.innerWidth;
                var value = ((width - (2)* 3 * 2) / 3)+'px';

                var obj = {
                    height : value,
                    width  : value
                };

                for(var i=0;i<self.list.length;i++)
                {
                    self.list[i].style = obj;
                }
            },
            change_img_resize : function(url)
            {
                var self = this;

                return Util.matching_img_size_v2(url,'s260');
            },
            show_circle : function(item)
            {
                var self = this;
                var tag = false;
                if(self.mode == 'zzhb' && !item.selected)
                {
                    tag = true;
                }
                else if(self.mode == 'wysq'&& (!item.selected && item.is_up == 0))
                {
                    tag = true;
                }

                return tag
            },
            show_fade : function(item)
            {
                var self = this;
                var tag = false;
                if(self.mode == 'zzhb' && item.selected)
                {
                    tag = true;
                }
                else if(self.mode == 'wysq'&& (item.selected || item.is_up == 1))
                {
                    tag = true;
                }

                return tag
            },
            show_select : function(item)
            {
                var self = this;
                var tag = false;
                if(self.mode == 'zzhb' && item.selected)
                {
                    tag = true;
                }
                else if(self.mode == 'wysq'&& item.selected)
                {
                    tag = true;
                }

                return tag
            },
            get_list : function(callback)
            {
                var self = this;

                callback = callback || function(){};

                Util.request
                ({
                    url : window.__MOJIKIDS_GLOBAL['AJAX_DOMAIN']+'/mine/get_order_showcase.php',
                    data : {
                        order_sn : self.order_sn
                    },
                    success : function(response)
                    {
                        var data = response.res.data;

                        self.list = response.res.data.list;

                        self.description = response.res.data.description;

                        self.init_height();

                        if(typeof callback == 'function')
                        {
                            callback.call(this);
                        }

                    },
                    error : function()
                    {
                        Util.toast
                        ({
                            message: '网络异常',
                            duration: 2000
                        });
                    }
                });
            },
            submit_wysq : function(list)
            {
                var self = this;

                if(list.length == 0)
                {
                    Util.toast
                    ({
                        message: '请选择照片',
                        duration: 2000
                    });
                    return;
                }

                if(list.length > 30)
                {
                    Util.toast
                    ({
                        message: '上墙照片数不能超过30张',
                        duration: 2000
                    });
                    return;
                }

                var list_str = list.join(',');

                Util.request
                ({
                    url : window.__MOJIKIDS_GLOBAL['AJAX_DOMAIN']+'/mine/submit_wysq.php',
                    data : {
                        image_ids : list_str
                    },
                    beforeSend : function()
                    {
                        Util.loading.open
    					({
    						text : '正在提交...',
    					});
                    },
                    success : function(response)
                    {
                        var data = response.res.data;

                        if(data.result > 0)
                        {
                            Util.toast
                            ({
                                message: '谢谢~\(≧▽≦)/~',
                                duration: 2000
                            });

                            self.get_list(function()
                            {
                                self.reset();
                                window.history.back();
                            });
                        }
                        else {
                            Util.toast
                            ({
                                message: data.message,
                                duration: 2000
                            });
                        }
                    },
                    error : function()
                    {
                        Util.toast
                        ({
                            message: '网络异常',
                            duration: 2000
                        });
                    },
                    complete : function()
                    {
                        Util.loading.close();
                    }
                });
            },
            show_big_img : function(url)
            {
                var self = this;

                self.preview = true;

                self.preview_img = '';

                window.location.hash = '#preview';

                // var img = new Image();
                //
                // img.src = url;
                //
                // Util.loading.open('图片加载中...');
                //
                // img.onload = function()
                // {
                //     self.preview_img = url;
                //
                //     Util.loading.close();
                // }
                //
                // img.onerror = function()
                // {
                //     Util.toast('图片加载失败');
                //     Util.loading.close();
                // }

            },
            /**
             * 选中某一个图片
             * @return {[type]} [description]
             */
            select_item : function(index)
            {
                var self = this;

                if( self.mode !='zzhb' && self.mode != 'wysq')
                {
                    // 图片选要在我要上墙才能使用
                    self.show_big_img(self.list[index].url);
                    return;
                }

                self.preview = false;

                if(self.list[index] && self.list[index].selected == false)
                {
                    if(self.mode == 'zzhb')
                    {
                        if(self.selected_list.length > 9)
                        {
                            Util.toast
                            ({
                                message: '制作海报数量不能超过9张',
                                duration: 2000
                            });
                            return;
                        }

                        self.list[index].selected = true;

                        self.add(self.list[index]);
                    }
                    else if(self.mode == 'wysq')
                    {
                        if(self.list[index].is_up == 0)
                        {
                            self.list[index].selected = true;
                            self.add(self.list[index]);
                        }
                        else
                        {
                            Util.toast
                            ({
                                message: '图片已经上墙',
                                duration: 2000
                            });
                        }

                    }
                }
                else
                {
                    self.list[index].selected = false;

                    self.minus(self.list[index],index);
                }
            },
            /**
             * 添加一项
             * @param {[type]} item [description]
             */
            add : function(item)
            {
                var self = this;
                if(!in_array(item.images,self.selected_list))
                {
                    item.num = self.selected_list.length + 1;
                    self.selected_list.push(item.image_id);
                }

            },
            /**
             * 减少一项
             * @param  {[type]} item  [description]
             * @param  {[type]} index [description]
             * @return {[type]}       [description]
             */
            minus : function(item,index)
            {
                var self = this;

                var temp_num = item.num;

                self.selected_list.removeByValue(item.image_id);

                for(var i=0;i<self.list.length;i++)
                {
                    if(self.list[i].num && self.list[i].num > temp_num)
                    {
                        self.list[i].num --;
                    }
                }
            },
            /**
             * 我要上墙
             */
            wysq : function()
            {
                var self = this;

                self.mode = 'wysq';

                if(self.preview)
                {
                    self.preview = false;
                    window.history.back();
                    return;
                }

                window.location.hash = self.mode;

                if(self.selected_list.length>0)
                {
                    Util.dialog
                    ({
    					title: '谢谢您的分享！',
    					message: '提交上墙照片后，该照片有可能被展示在MOJIKIDS官方宣传渠道',
    					showCancelButton : true,
    					confirmButtonText : '确认上墙',
    					cancelButtonText : '取消上墙',
    				},
    				/**
    				 * 按钮点中后的回调
    				 * @param  {[string]} value [description]
    				 * @return {[string]} 返回confirm  || cancel [description]
    				 */
    				function(value)
    				{
    					if(value == 'confirm')
                        {
                            self.submit_wysq(self.selected_list);
                        }
    				})
                }
            },
            /**
             * 制作海报
             * @return {[type]} [description]
             */
            zzhb : function()
            {
                var self = this;

                if(self.preview)
                {
                    self.preview = false;
                    window.history.back();
                    return;
                }

                self.mode = 'zzhb';

                window.location.hash = self.mode;

                if(self.selected_list.length > 9)
                {
                    Util.toast
                    ({
                        message: '制作海报数量不能超过9张',
                        duration: 2000
                    });
                    return;
                }

                if(self.selected_list.length >0)
                {
                    Util.loading.open
                    ({
                        text : '正在制作海报...',
                        timeout : 2000,
                    });

                    setTimeout(function()
                    {
                        Util.loading.close();

                        var image_ids = self.selected_list.join(',')

                        window.location.href = window.__MOJIKIDS_GLOBAL['PAGE_URL']['bb']+'?image_ids='+image_ids;
                    },2000);
                }

            },
            /**
             * 重置
             */
            reset : function()
            {
                var self = this;

                for(var i=0;i<self.list.length;i++)
                {
                    self.list[i].selected = false;
                    self.list[i].num = 0;
                }

                self.mode = 'view';
                self.selected_list = [];
            },
            qx : function()
            {
                var self = this;

                self.reset();

                window.history.back();
            }
        },

    }
}

</script>
